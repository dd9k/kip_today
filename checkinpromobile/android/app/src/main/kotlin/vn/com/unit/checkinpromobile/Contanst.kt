package vn.com.unit.checkinpromobile

import com.brother.ptouch.sdk.PrinterInfo

object Contanst {
    const val CHANNEL_PRINTER = "flutter.native/helper"
    const val READY_CHANNEL = "ready"
    const val CHANNEL_GET_LOCATION = "flutter.native/location"
    const val CHANNEL_MEMORY = "hardware"
    const val CHANNEL_REMINDER = "reminder"
    const val ACTION_REMINDER_CREATE = "createReminder"
    const val ACTION_REMINDER_CHECK = "checkReminder"
    const val ACTION_REMINDER_GRANT = "grantReminder"
    const val ACTION_HANDLER_NOTIFICATION = "handlerNotification"
    const val ACTION_PRINTER_FIND = "findPrinter"
    const val ACTION_PRINTER_TEST = "printTest"
    const val ACTION_PRINTER_PRINT = "printTemplate"
    const val ACTION_MEMORY = "memory"
    const val SUCCESS = "SUCCESS"
    const val FAIL = "FAIL"
    const val PRINTER_QL810W = "QL-810W"
    const val BADGE_FILE_TEMPLATE = "card_printer.png"
    const val BADGE_FILE_TEST = "card_exmp.png"
    const val FOLDER_BADGE = "/badge"
    const val BROTHER = "brother"
    const val KEY_INVITATION = "Invitation"
    const val KEY_NOTIFY_ID = "notifyId"
    object ErrorCode {
        const val NO_PRINTER = "noPrinter"
        const val NO_TEST_IMAGE= "noTestImage"
        const val NONE = "none"
        const val NOT_SAME_MODEL = "notsamemodel"
        const val BROTHER_PRINTER_NOT_FOUND = "brotherprinternotfound"
        const val PAPER_EMPTY = "paperempty"
        const val BATTERY_EMPTY = "batteryempty"
        const val COMMUNICATION_ERROR = "communicationerror"
        const val OVERHEAT = "overheat"
        const val PAPER_JAM = "paperjam"
        const val HIGH_VOLTAGE_ADAPTER = "highvoltageadapter"
        const val CHANGE_CASSETTE = "changecassette"
        const val FEED_OR_CASSETTE_EMPTY = "feedorcassetteempty"
        const val SYSTEM_ERROR = "systemerror"
        const val NO_CASSETTE = "nocassette"
        const val WRONG_CASSETTE_DIRECT = "wrongcassettedirect"
        const val CREATE_SOCKET_FAILED = "createsocketfailed"
        const val CONNECT_SOCKET_FAILED = "connectsocketfailed"
        const val GET_OUTPUT_STREAM_FAILED = "getoutputstreamfailed"
        const val GET_INPUT_STREAM_FAILED = "getinputstreamfailed"
        const val CLOSE_SOCKET_FAILED = "closesocketfailed"
        const val OUT_OF_MEMORY = "outofmemory"
        const val SET_OVER_MARGIN = "setovermargin"
        const val NO_SD_CARD = "nosdcard"
        const val FILE_NOT_SUPPORTED = "filenotsupported"
        const val EVALUATION_TIMEUP = "evaluationtimeup"
        const val WRONG_CUSTOM_INFO = "wrongcustominfo"
        const val NO_ADDRESS = "noaddress"
        const val NOT_MATCH_ADDRESS = "notmatchaddress"
        const val FILE_NOT_FOUND = "filenotfound"
        const val TEMPLATE_FILE_NOT_MATCH_MODEL = "templatefilenotmatchmodel"
        const val TEMPLATE_NOT_TRANS_MODEL = "templatenottransmodel"
        const val COVER_OPEN = "coveropen"
        const val WRONG_LABEL = "wronglabel"
        const val PORT_NOT_SUPPORTED = "portnotsupported"
        const val WRONG_TEMPLATE_KEY = "wrongtemplatekey"
        const val BUSY = "busy"
        const val TEMPLATE_NOT_PRINT_MODEL = "templatenotprintmodel"
        const val CANCEL = "cancel"
        const val PRINTER_SETTING_NOT_SUPPORTED = "printersettingnotsupported"
        const val INVALID_PARAMETER = "invalidparameter"
        const val INTERNAL_ERROR = "internalerror"
        const val TEMPLATE_NOT_CONTROL_MODEL = "templatenotcontrolmodel"
        const val TEMPLATE_NOT_EXIST = "templatenotexist"
        const val BUFFER_FULL = "bufferfull"
        const val TUBE_EMPTY = "tubeempty"
        const val TUBE_RIBBON_EMPTY = "tuberibbonempty"
        const val UPDATE_FRIM_NOT_SUPPORTED = "updatefrimnotsupported"
        const val OS_VERSION_NOT_SUPPORTED = "osversionnotsupported"
        const val RESOLUTION_MODE = "resolutionmode"
        const val POWER_CABLE_UNPLUGGING = "powercableunplugging"
        const val BATTERY_TROUBLE = "batterytrouble"
        const val UNSUPPORTED_MEDIA = "unsupportedmedia"
        const val TUBE_CUTTER = "tubecutter"
        const val UNSUPPORTED_TWO_COLOR = "unsupportedtwocolor"
        const val UNSUPPORTED_MONO_COLOR = "unsupportedmonocolor"
        const val MINIMUM_LENGTH_LIMIT = "minimumlengthlimit"
    }
}